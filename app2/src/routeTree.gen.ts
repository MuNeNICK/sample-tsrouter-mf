/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as ReportsRouteImport } from './routes/reports'
import { Route as OrdersRouteImport } from './routes/orders'
import { Route as InventoryRouteImport } from './routes/inventory'
import { Route as CustomersRouteImport } from './routes/customers'
import { Route as IndexRouteImport } from './routes/index'

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const ReportsRoute = ReportsRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => rootRouteImport,
} as any)
const OrdersRoute = OrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => rootRouteImport,
} as any)
const InventoryRoute = InventoryRouteImport.update({
  id: '/inventory',
  path: '/inventory',
  getParentRoute: () => rootRouteImport,
} as any)
const CustomersRoute = CustomersRouteImport.update({
  id: '/customers',
  path: '/customers',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/customers': typeof CustomersRoute
  '/inventory': typeof InventoryRoute
  '/orders': typeof OrdersRoute
  '/reports': typeof ReportsRoute
  '/settings': typeof SettingsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/customers': typeof CustomersRoute
  '/inventory': typeof InventoryRoute
  '/orders': typeof OrdersRoute
  '/reports': typeof ReportsRoute
  '/settings': typeof SettingsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/customers': typeof CustomersRoute
  '/inventory': typeof InventoryRoute
  '/orders': typeof OrdersRoute
  '/reports': typeof ReportsRoute
  '/settings': typeof SettingsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/customers'
    | '/inventory'
    | '/orders'
    | '/reports'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/customers' | '/inventory' | '/orders' | '/reports' | '/settings'
  id:
    | '__root__'
    | '/'
    | '/customers'
    | '/inventory'
    | '/orders'
    | '/reports'
    | '/settings'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CustomersRoute: typeof CustomersRoute
  InventoryRoute: typeof InventoryRoute
  OrdersRoute: typeof OrdersRoute
  ReportsRoute: typeof ReportsRoute
  SettingsRoute: typeof SettingsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reports': {
      id: '/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/orders': {
      id: '/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inventory': {
      id: '/inventory'
      path: '/inventory'
      fullPath: '/inventory'
      preLoaderRoute: typeof InventoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/customers': {
      id: '/customers'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof CustomersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CustomersRoute: CustomersRoute,
  InventoryRoute: InventoryRoute,
  OrdersRoute: OrdersRoute,
  ReportsRoute: ReportsRoute,
  SettingsRoute: SettingsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
